service: aws-auction-service

provider:
  name: aws
  runtime: nodejs16.x
  stage: dev
  region: us-east-1
  environment:
    DYNAMODB_TABLE_NAME: ${self:custom.auctionTableName}
    user_pool_id: { Ref: UserPool }
    client_id: { Ref: UserClient }
    MAIL_QUEUE_URL: ${self:custom.sendMailQueue.url}
  iamRoleStatements:
    - ${file(iam/AuctionTableIAM.yml):AuctionTableIAM}

custom:
  auctionTableName: auction-table-${self:provider.stage}
  sendMailQueue:
    name: MailQueue-${self:provider.stage}
    arn: !GetAtt MailQueue.Arn
    url: !Ref MailQueue

functions:
  createAuction: ${file(aws/function/LambdaFunction.yml):createAuctionFunction} # Authenticated
  getAuctions: ${file(aws/function/LambdaFunction.yml):getAuctionFunction}
  getAuctionDetails: ${file(aws/function/LambdaFunction.yml):getAuctionDetailsFunction}
  placeBid: ${file(aws/function/LambdaFunction.yml):placeBidFunction} #Authenticated
  runningAuction: ${file(aws/function/LambdaFunction.yml):runningAuctionFunction}
  processAuction:
    handler: src/handlers/processAuction.handler
    events:
      - http:
          path: auction/close-auction
          method: GET
    # events:
    #   - schedule: rate(1 minute)

  signupUser: ${file(aws/function/LambdaFunction.yml):signupUserFunction}
  loginUser: ${file(aws/function/LambdaFunction.yml):loginUserFunction}
  userInfo: ${file(aws/function/LambdaFunction.yml):userInfoFunction} #Authenticated
  sendMail:
    handler: src/mail/sendmail.handler
    events:
      - sqs:
          arn: ${self:custom.sendMailQueue.arn}
          batchSize: 1



resources:
  Resources:
    AuctionTable: ${file(resources/AuctionTable.yml):AuctionTable}
    UserPool:
      Type: AWS::Cognito::UserPool
      Properties:
        UserPoolName: auction-service-auth-pool
        Schema:
          - Name: email
            Required: true
            Mutable: true
          - Name: name
            Required: true
        Policies:
          PasswordPolicy:
            MinimumLength: 6
        AutoVerifiedAttributes: ["email"]

    UserClient:
      Type: AWS::Cognito::UserPoolClient
      Properties:
        ClientName: user-pool-ui
        GenerateSecret: false
        UserPoolId: { Ref: UserPool }
        AccessTokenValidity: 5
        IdTokenValidity: 5
        ExplicitAuthFlows:
          - "ADMIN_NO_SRP_AUTH"
    MailQueue: ${file(resources/MailQueue.yml):MailQueue}
  Outputs:
    MailQueueArn: ${file(resources/MailQueue.yml):Outputs.MailQueueArn}
    MailQueueUrl: ${file(resources/MailQueue.yml):Outputs.MailQueueUrl}
